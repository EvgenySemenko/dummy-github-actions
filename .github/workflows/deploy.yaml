# Name of workflow
name: Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push tag that match mask v*.*.*
  push:
    branch:
      - master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Replace dots with dashes, since App Engine doesn't support dots in the version names
      - name: Get release version name from latest tag
        run: echo "RELEASE_VERSION=$(git describe --abbrev=0 --tags `git rev-list --tags --max-count=1`)" | sed 's/\./-/g' >> $GITHUB_ENV

      # Setup gcloud utils
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      # Copy app.yaml from bucket
      - name: Dowload app.yaml from Google Storage
        run: gsutil cp ${{ secrets.GCP_BUCKET }}/app.yaml app.yaml

      # Deploy App
      - name: Deploy and promote latest release version
        run: gcloud app deploy app.yaml --quiet --project ${{ secrets.GCP_PROJECT }} --image-url eu.gcr.io/${{ secrets.GCP_PROJECT }}/appengine/default.${{ env.RELEASE_VERSION }} --version r-${{ env.RELEASE_VERSION }} --promote --stop-previous-version

      # Remove old versions (older than 2 latest release versions)
      - name: Remove old versions
        run: gsutil cp ${{ secrets.GCP_BUCKET }}/app.yaml app.yaml
        run: |
          for i in $(gcloud app versions list --project ${{ secrets.GCP_PROJECT }} --service ${{ secrets.GCP_APP_SERVICE_NAME }} --sort-by LAST_DEPLOYED | sort -r | sed '$d' | awk 'NR>3 { print $2 }');
            do gcloud app versions delete --project ${{ secrets.GCP_PROJECT }} --service ${{ secrets.GCP_APP_SERVICE_NAME }} delete $i;
          done
